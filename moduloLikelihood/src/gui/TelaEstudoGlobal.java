/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import estatistica.Agrupados;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mapeamento.EstudoGlobal;
import mapeamento.EstudoIndividual;
import moduloLikelihoodException.ModuloLikelihoodException;

/**
 *
 * @author allan
 */
public class TelaEstudoGlobal extends javax.swing.JFrame {

    private  EstudoGlobal estGlob = null;
    private  DefaultTableModel modeloTabelas = null;
    private  ArrayList<EstudoIndividual> listaEstInd = new ArrayList<>(), listaEstudosIndividuais_remover = new ArrayList<>();
    private  boolean primeiraExecucao = true;
    private Vector rows = null;
    
    /**
     * Creates new form TelaEstudoGlobal
     */
    public TelaEstudoGlobal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DefaultTableModel model = new DefaultTableModel(){

            @Override
            public Class<?> getColumnClass(int column){
                switch(column){
                    case 0:
                    return Boolean.class;
                    case 1:
                    return String.class;
                    case 2:
                    return String.class;
                    case 3:
                    return String.class;
                    default:
                    return String.class;
                }
            }

            @Override
            public boolean isCellEditable(int row, int column){
                return column == 0;
            }
        };
        listagemEstInd_tabela = new javax.swing.JTable();
        model.addColumn("");
        model.addColumn("ID");
        model.addColumn("Título");
        model.addColumn("Descrição");

        this.inicializaTela(model);
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grupoEstudoGlobal_tabela = new javax.swing.JTable();
        DefaultTableModel modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };

        modelo.addColumn("ID");
        modelo.addColumn("Título");
        modelo.addColumn("Descrição");
        jLabel1 = new javax.swing.JLabel();
        EstudoGlobalRetirar_button = new javax.swing.JButton();
        EstudoGlobalLimpar_button = new javax.swing.JButton();
        estInd_insere_estGlob_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Estudo Global");
        setIconImage(new ImageIcon("src/conteudo/icone.jpg").getImage());
        setName("TelaEstudoGlobal"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "   ESTUDOS  INDIVIDUAIS   ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        listagemEstInd_tabela.setModel(model);
        listagemEstInd_tabela.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        listagemEstInd_tabela.setFocusable(false);
        listagemEstInd_tabela.setRowSelectionAllowed(false);
        listagemEstInd_tabela.setShowHorizontalLines(false);
        listagemEstInd_tabela.setShowVerticalLines(false);
        listagemEstInd_tabela.getTableHeader().setReorderingAllowed(false);
        this.listagemEstInd_tabela.getColumnModel().getColumn(3).setPreferredWidth(400);
        jScrollPane1.setViewportView(listagemEstInd_tabela);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setPreferredSize(new java.awt.Dimension(513, 628));

        grupoEstudoGlobal_tabela.setModel(modelo
        );
        grupoEstudoGlobal_tabela.setShowHorizontalLines(false);
        grupoEstudoGlobal_tabela.setShowVerticalLines(false);
        grupoEstudoGlobal_tabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(grupoEstudoGlobal_tabela);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("ESTUDO GLOBAL");

        EstudoGlobalRetirar_button.setText("Retirar");
        EstudoGlobalRetirar_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstudoGlobalRetirar_buttonActionPerformed(evt);
            }
        });

        EstudoGlobalLimpar_button.setText("Limpar");
        EstudoGlobalLimpar_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstudoGlobalLimpar_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EstudoGlobalRetirar_button, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EstudoGlobalLimpar_button, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EstudoGlobalRetirar_button, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(EstudoGlobalLimpar_button, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                .addContainerGap())
        );

        estInd_insere_estGlob_button.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        estInd_insere_estGlob_button.setText(">>");
        estInd_insere_estGlob_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estInd_insere_estGlob_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estInd_insere_estGlob_button, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(estInd_insere_estGlob_button, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void estInd_insere_estGlob_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estInd_insere_estGlob_buttonActionPerformed
        if(this.listagemEstInd_tabela.getRowCount()>0){
            DefaultTableModel model1 = (DefaultTableModel) this.listagemEstInd_tabela.getModel();
            DefaultTableModel model2 = (DefaultTableModel) this.grupoEstudoGlobal_tabela.getModel();

            boolean selecao;

            try{
                ArrayList<Object> listaEstInd_para_EstGlob = new ArrayList<>();

                for(int i = 0; i<this.listagemEstInd_tabela.getRowCount(); i++){
                    selecao = (boolean) this.listagemEstInd_tabela.getValueAt(i, 0);

                    if(selecao){
                         listaEstInd_para_EstGlob.add(this.listagemEstInd_tabela.getValueAt(i, 1));
                    }
                }

                for(int i = 0; i<this.listagemEstInd_tabela.getRowCount(); i++){
                    if(listaEstInd_para_EstGlob.contains(model1.getValueAt(i, 1))){
                        this.rows = (Vector) model1.getDataVector().get(i);
                        model2.addRow(new Object[] {this.rows.get(1), this.rows.get(2), this.rows.get(3)});

                        ArrayList<EstudoIndividual> queryResults =  persistencia.CRUD.executaConsulta(this.rows.get(1).toString(), this.rows.get(2).toString());

                        this.listaEstInd.add(queryResults.get(0));

                        queryResults.clear();

                        model1.removeRow(i);
                        i = -1;
                    }
                }

                Agrupados.resetaValores();
                Agrupados.setEstudosIndividuais(this.listaEstInd);
                Agrupados.calculaLikelihoodGlobal();

                if(!primeiraExecucao){
                        this.estGlob.setLkpositiva(Agrupados.getLKPositiva());
                        this.estGlob.setLknegativa(Agrupados.getLKNegativa());
                        persistencia.CRUD.executaAtualizacao(this.estGlob);
                } else{
                        this.estGlob = new EstudoGlobal();
                        this.estGlob.setLkpositiva(Agrupados.getLKPositiva());
                        this.estGlob.setLknegativa(Agrupados.getLKNegativa());
                        persistencia.CRUD.executaCadastro(this.estGlob);
                        primeiraExecucao = false;
                }
                
                for(EstudoIndividual estInd : this.listaEstInd){
                     estInd.setEstudoGlobal(this.estGlob);  
                     persistencia.CRUD.executaAtualizacao(estInd);
                }
                
                if(primeiraExecucao==false)JOptionPane.showMessageDialog(this.rootPane, "Estudo global criado com sucesso");

            } catch (ModuloLikelihoodException ex) {
                JOptionPane.showMessageDialog(this.rootPane, ex.getMessage());
            } catch(Exception ex){
                JOptionPane.showMessageDialog(this.rootPane,"Cadastro do estudo global falhou. Por favor, tente novamente.");
            }
        }
    }//GEN-LAST:event_estInd_insere_estGlob_buttonActionPerformed

    private void EstudoGlobalRetirar_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstudoGlobalRetirar_buttonActionPerformed
        if(this.grupoEstudoGlobal_tabela.getSelectedRow() != -1){
            if(this.grupoEstudoGlobal_tabela.getRowCount() > 0 && this.estGlob != null){
                
                this.modeloTabelas = (DefaultTableModel) this.grupoEstudoGlobal_tabela.getModel();
                this.listaEstudosIndividuais_remover.clear();

                for(EstudoIndividual estInd : this.listaEstInd){
                    if(estInd.getId().toString().equals(String.valueOf(this.grupoEstudoGlobal_tabela.getValueAt(this.grupoEstudoGlobal_tabela.getSelectedRow(), 0)))){
                        this.listaEstudosIndividuais_remover.add(estInd);
                        estInd.setEstudoGlobal(null);
                        persistencia.CRUD.executaAtualizacao(estInd);
                        break;
                    }
                }

                this.modeloTabelas = (DefaultTableModel) this.listagemEstInd_tabela.getModel();
                Vector dataVector = modeloTabelas.getDataVector();
                for(EstudoIndividual estInd : this.listaEstudosIndividuais_remover){
                    if(this.listagemEstInd_tabela.getRowCount()>0){
                        for(int i = 0; i<this.listagemEstInd_tabela.getRowCount(); i++){
                            Vector row_before = (Vector) dataVector.get(i);

                            if(i<(this.listagemEstInd_tabela.getRowCount()-1)){
                                Vector row_after  = (Vector) dataVector.get(i+1);
                               
                                if((estInd.getId() > (Integer.parseInt(row_before.get(1).toString()))) && (estInd.getId() < (Integer.parseInt(row_after.get(1).toString())))){
                                    modeloTabelas.addRow(new Object[]{false, estInd.getId(), estInd.getTitulo(), estInd.getDescricao()});
                                    modeloTabelas.moveRow((this.listagemEstInd_tabela.getRowCount()-1), (this.listagemEstInd_tabela.getRowCount()-1), i+1);
                                    break;
                                } else{
                                    if(estInd.getId() < (Integer.parseInt(row_before.get(1).toString()))){
                                        modeloTabelas.addRow(new Object[]{false, estInd.getId(), estInd.getTitulo(), estInd.getDescricao()});
                                        modeloTabelas.moveRow((this.listagemEstInd_tabela.getRowCount()-1), (this.listagemEstInd_tabela.getRowCount()-1), i);
                                        break;
                                    }
                                }
                            } else{
                                modeloTabelas.addRow(new Object[]{false, estInd.getId(), estInd.getTitulo(), estInd.getDescricao()});
                                if(estInd.getId() < (Integer.parseInt(row_before.get(1).toString()))){
                                    modeloTabelas.moveRow((this.listagemEstInd_tabela.getRowCount()-1), (this.listagemEstInd_tabela.getRowCount()-1), i);     
                                }
                                break;
                            }
                        } 
                    }else{
                         modeloTabelas.addRow(new Object[]{false, estInd.getId(), estInd.getTitulo(), estInd.getDescricao()});
                    }
                    this.listaEstInd.remove(estInd);
                }

                this.modeloTabelas = (DefaultTableModel) this.grupoEstudoGlobal_tabela.getModel();
                this.modeloTabelas.removeRow(this.grupoEstudoGlobal_tabela.getSelectedRow());

                if(!this.listaEstInd.isEmpty()){
                    Agrupados.resetaValores();
                    Agrupados.setEstudosIndividuais(this.listaEstInd);
                    Agrupados.calculaLikelihoodGlobal();
                    
                    this.estGlob.setLkpositiva(Agrupados.getLKPositiva());
                    this.estGlob.setLknegativa(Agrupados.getLKNegativa());
                } else{
                    this.estGlob.setLkpositiva(0);
                    this.estGlob.setLknegativa(0);
                }
                
                persistencia.CRUD.executaAtualizacao(this.estGlob);
            }
        } else{
              if(this.grupoEstudoGlobal_tabela.getRowCount() > 0){
                  this.grupoEstudoGlobal_tabela.changeSelection(this.grupoEstudoGlobal_tabela.getRowCount()-1, 0, true, false);
              }
        }
    }//GEN-LAST:event_EstudoGlobalRetirar_buttonActionPerformed

    private void EstudoGlobalLimpar_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstudoGlobalLimpar_buttonActionPerformed
        if(this.grupoEstudoGlobal_tabela.getRowCount()>0){
            this.modeloTabelas = (DefaultTableModel) this.grupoEstudoGlobal_tabela.getModel();
           
            for(EstudoIndividual estInd : this.listaEstInd){
                estInd.setEstudoGlobal(null);
                persistencia.CRUD.executaAtualizacao(estInd);
                modeloTabelas.removeRow(0);
            }
            
            this.modeloTabelas = (DefaultTableModel) this.listagemEstInd_tabela.getModel();
            Vector dataVector = this.modeloTabelas.getDataVector();
            for(EstudoIndividual estInd : this.listaEstInd){
                if(this.listagemEstInd_tabela.getRowCount()>0){
                    for(int i = 0; i<this.listagemEstInd_tabela.getRowCount(); i++){
                        Vector row_before = (Vector) dataVector.get(i);

                        if(i<(this.listagemEstInd_tabela.getRowCount()-1)){
                            Vector row_after  = (Vector) dataVector.get(i+1);
                            
                            if((estInd.getId() > (Integer.parseInt(row_before.get(1).toString()))) && (estInd.getId() < (Integer.parseInt(row_after.get(1).toString())))){
                                this.modeloTabelas.addRow(new Object[]{false, estInd.getId(), estInd.getTitulo(), estInd.getDescricao()});
                                this.modeloTabelas.moveRow((this.listagemEstInd_tabela.getRowCount()-1), (this.listagemEstInd_tabela.getRowCount()-1), i+1);
                                break;
                            }else{
                                    if(estInd.getId() < (Integer.parseInt(row_before.get(1).toString()))){
                                        this.modeloTabelas.addRow(new Object[]{false, estInd.getId(), estInd.getTitulo(), estInd.getDescricao()});
                                        this.modeloTabelas.moveRow((this.listagemEstInd_tabela.getRowCount()-1), (this.listagemEstInd_tabela.getRowCount()-1), i);
                                        break;
                                    }
                            }
                        } else{
                            this.modeloTabelas.addRow(new Object[]{false, estInd.getId(), estInd.getTitulo(), estInd.getDescricao()});
                            if(estInd.getId() < (Integer.parseInt(row_before.get(1).toString()))){
                                this.modeloTabelas.moveRow((this.listagemEstInd_tabela.getRowCount()-1), (this.listagemEstInd_tabela.getRowCount()-1), i);     
                            }
                            break;
                        }
                    } 
                }else{
                    this.modeloTabelas.addRow(new Object[]{false, estInd.getId(), estInd.getTitulo(), estInd.getDescricao()});
                }
            }
            
            if(this.estGlob != null){
                    this.estGlob.setLkpositiva(0);
                    this.estGlob.setLknegativa(0);
                    persistencia.CRUD.executaAtualizacao(this.estGlob);
            }
            
            this.listaEstInd.clear();
        }   
    }//GEN-LAST:event_EstudoGlobalLimpar_buttonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if(this.estGlob != null && (this.estGlob.getLknegativa()==0 && this.estGlob.getLkpositiva()==0 
                                    /*&& this.estGlob.getErroPadrao()==0 && this.estGlob.getIntervaloConfInf()==0 && this.estGlob.getIntervaloConfSup()==0*/)){
            persistencia.CRUD.executaExclusao(this.estGlob);
        }
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaEstudoGlobal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaEstudoGlobal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaEstudoGlobal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaEstudoGlobal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaEstudoGlobal().setVisible(true);
            }
        });
    }
    
    private void inicializaTela(DefaultTableModel model) {
        for(Object obj : persistencia.CRUD.executaConsulta()){
            EstudoIndividual estInd = (EstudoIndividual) obj;
            try{
                if(estInd.getEstudoGlobal() == null){
                    if(estInd.getMetanaliseEstudoIndividual()!=null) model.addRow(new Object[] {false, estInd.getId(), estInd.getTitulo(), estInd.getDescricao()});
                
                    else throw new moduloLikelihoodException.ModuloLikelihoodException("Erro ao listar estudos individuais. O estudo " + estInd.getId() + 
                                                                                   " possui erro em sua metanálise. Por favor, exclua-o e recadastre-o no sistema.");
                }
            } catch(moduloLikelihoodException.ModuloLikelihoodException ex){
                JOptionPane.showMessageDialog(this.rootPane, ex.getMessage());
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EstudoGlobalLimpar_button;
    private javax.swing.JButton EstudoGlobalRetirar_button;
    private javax.swing.JButton estInd_insere_estGlob_button;
    private javax.swing.JTable grupoEstudoGlobal_tabela;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable listagemEstInd_tabela;
    // End of variables declaration//GEN-END:variables
 
}
